import{c as n,m as h,d as c,t as p,n as k,p as y,g as w,i as $}from"./index-4LWUHDJo.js";const R=a=>{const t=n(c,"calendarEvents/");return h(t,e=>{a(e.val()||{})})},C=async(a,t)=>{const e=n(c,`calendarEvents/${a}`),s=y(e);await k(s,t)},S=async(a,t,e)=>{const s=n(c,`calendarEvents/${a}/${t}`);await k(s,e)},T=async(a,t)=>{const e=n(c,`calendarEvents/${a}/${t}`);await p(e)},P=async a=>{const t=`https://date.nager.at/api/v3/PublicHolidays/${a}/ID`;try{const e=await fetch(t);if(!e.ok)throw new Error(`API request failed with status ${e.status}`);const s=await e.json();if(!s||s.length===0)return{success:!0,count:0,message:`Tidak ada data hari libur yang ditemukan untuk tahun ${a}.`};const r=n(c,"calendarEvents"),E=(await w(r)).val()||{},v={};let o=0;return s.forEach(l=>{const d=l.date,f=l.localName||l.name,m=E[d]||{};if(!Object.values(m).some(u=>u.title.trim().toLowerCase()===f.trim().toLowerCase()&&u.type==="Libur")){const u=y(n(c,`calendarEvents/${d}`));v[`/calendarEvents/${d}/${u.key}`]={title:f,type:"Libur"},o++}}),o>0?(await $(n(c),v),{success:!0,count:o,message:`Sinkronisasi berhasil! ${o} hari libur baru ditambahkan untuk tahun ${a}.`}):{success:!0,count:0,message:`Tidak ada hari libur baru untuk ditambahkan. Kalender sudah sinkron untuk tahun ${a}.`}}catch(e){return console.error("Gagal melakukan sinkronisasi:",e),{success:!1,count:0,message:"Terjadi kesalahan saat sinkronisasi. Periksa koneksi internet dan coba lagi."}}},D=a=>{const t=n(c,"picketSchedules/");return h(t,e=>{a(e.val()||{})})},x=async(a,t)=>{const e=n(c,`picketSchedules/${a}`);if(t.length===0)await p(e);else{const s=t.reduce((r,i)=>(r[i]=!0,r),{});await k(e,s)}},L=(a,t)=>{const s=new Date(a).getUTCDay();if(s===0)return t(null),()=>{};const r=n(c,`picketSchedules/${s}`);return h(r,i=>{t(i.val())})};export{L as a,C as b,D as c,T as d,x as e,R as l,P as s,S as u};
